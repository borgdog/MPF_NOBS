#config_version=5
# NObS

mode:
    start_events: ball_starting
    priority: 100

counters:
    ebcounter:
        count_events: top_king_lit_hit, top_queen_lit_hit, top_jack_lit_hit, right_2_lit_hit, left_inlane_lit_hit, right_outlane_lit_hit
        starting_count: 0
        count_complete_value: 6
        direction: up
        events_when_complete:  
            extra_ball_lit
        reset_on_complete: false
        restart_events: ball_save_bs_disabled

ball_saves:
    bs:
        enable_events: extra_ball_hit

timers:
    ejecttimer:
        start_running: True
        start_value: 4 if current_player.ball==1 and current_player.number==1 else 1
        end_value: 0
        direction: down
        tick_interval: 0.5s
        control_events:
            - event: ball_save_bs_saving_ball
              action: restart
            - event: ball_save_skill_bs_enabled
              action: restart
        debug: true
        

variable_player:

    star1_hit{device.achievements.litstar1.state=='completed'}:
        score: 1 * current_player.dpegs
    star2_hit{device.achievements.litstar2.state=='completed'}:
        score: 1 * current_player.dpegs
    star3_hit{device.achievements.litstar3.state=='completed'}:
        score: 1 * current_player.dpegs
    star4_hit{device.achievements.litstar4.state=='completed'}:
        score: 1 * current_player.dpegs
    star5_hit{device.achievements.litstar5.state=='completed'}:
        score: 1 * current_player.dpegs

    player_score:     #add gamescore when scoring
        gamescore:
            int: change
            action: add
    
    player_games{current_player.number==1}:
        player1games:
            int: change
            action: add_machine

    player_games{current_player.number==2}:
        player2games:
            int: change
            action: add_machine

    
    player_gamescore{current_player.gamescore>120}:  #check for winning game
        gameswon: 1
        games: 1
        gamescore:              #RESET FOR SINGLE PLaYER GaME
            int: 0
            action: set

    player_gameswon{game.num_players==2 and player_num==1}:   
        skunks: 
            int: 1 if players[1].gamescore<91 else 0             # cHEcK FOR SKUNK PLaYER 1 WON
            action: set

    player_gameswon{game.num_players==2 and player_num==2}:   
        skunks: 
            int: 1 if players[0].gamescore<91 else 0             # cHEcK FOR SKUNK PLaYER 2 WON
            action: set

    player_skunks{current_player.skunks==1 and player_num==1}:
        games: 3 if players[1].gamescore<61 else 1              # cHEcK FOR dOUbLE SKUNK IF SKUNK
        gamereset: 1

    player_skunks{current_player.skunks==1 and player_num==2}:
        games: 3 if players[0].gamescore<61 else 1              # cHEcK FOR dOUbLE SKUNK IF SKUNK ScORE
        gamereset: 1
    
    player_skunks{current_player.skunks==0}:    # INITIaTE RESET IF NO SKUNKS
        gamereset: 1
 
    player_gamereset{game.num_players==2}: #RESET GaME ScORES aFTER GaME WON on 2 player games
        resetplayer1: 1
        resetplayer2: 1
        
    player_resetplayer1:
        gamescore:
            int: 0
            player: 1
            action: set

    player_resetplayer2:
        gamescore:
            int: 0
            player: 2
            action: set
    
    dp_pegs:
        dpegs:
            int: 2
            action: set
            
    ball_drain:
        dpegs:
            int: 1
            action: set

    award_heels:
        score: 2

    handa_complete{machine.roto==1 or machine.roto==3}:
        score: 16 * current_player.dpegs
    handa_complete{machine.roto==2}:
        score: 15 * current_player.dpegs
    handa_complete{machine.roto==4 or machine.roto==7 or machine.roto==8}:
        score: 10 * current_player.dpegs
    handa_complete{machine.roto==5 or machine.roto==6}:
        score: 8 * current_player.dpegs
    handa_complete{machine.roto==9}:
        score: 12 * current_player.dpegs
    handa_complete{current_player.roto>9}:
        score: 14 * current_player.dpegs

    handb_complete{machine.roto==1 or machine.roto==3 or machine.roto==7 or machine.roto==9}:
        score: 14 * current_player.dpegs
    handb_complete{machine.roto==2 or machine.roto==8}:
        score: 12 * current_player.dpegs
    handb_complete{machine.roto==4 or machine.roto==6}:
        score: 24 * current_player.dpegs
    handb_complete{machine.roto==5}:
        score: 21 * current_player.dpegs
    handb_complete{machine.roto==10 or machine.roto==11 or machine.roto==12 or machine.roto==13}:
        score: 16 * current_player.dpegs

    handc_complete{machine.roto==1 or machine.roto==2}:
        score: 10 * current_player.dpegs
    handc_complete{machine.roto==3 or machine.roto==4 or current_player.roto>10}:
        score: 8 * current_player.dpegs
    handc_complete{machine.roto==5 or machine.roto==10}:
        score: 9 * current_player.dpegs
    handc_complete{machine.roto==6 or machine.roto==7 or machine.roto==8 or machine.roto==9}:
        score: 16 * current_player.dpegs

    handd_complete{machine.roto==1 or machine.roto==2 or machine.roto==3 or machine.roto==4 or machine.roto==6 or machine.roto==7 or machine.roto==8 or machine.roto==9}:
        score: 9 * current_player.dpegs
    handd_complete{machine.roto==5}:
        score: 17 * current_player.dpegs
    handd_complete{machine.roto==10}:
        score: 12 * current_player.dpegs
    handd_complete{current_player.roto>10}:
        score: 16 * current_player.dpegs
 
    left_outlane_hit{machine.roto==5 or current_player.roto>9}:
        score: 2 * current_player.dpegs
    left_inlane_hit{machine.roto==7 or machine.roto==8}:
        score: 2 * current_player.dpegs
    right_outlane_hit{machine.roto==7 or machine.roto==8}:
        score: 2 * current_player.dpegs
    droptarget_6_hit{machine.roto==6 or machine.roto==9}:
        score: 2 * current_player.dpegs
    droptarget_6b_hit{machine.roto==6 or machine.roto==9}:
        score: 2 * current_player.dpegs
    droptarget_5_hit{machine.roto==5 or current_player.roto>9}:
        score: 2 * current_player.dpegs
    droptarget_5b_hit{machine.roto==5 or current_player.roto>9}:
        score: 2 * current_player.dpegs
    droptarget_4_hit{machine.roto==4}:
        score: 2 * current_player.dpegs
    droptarget_9_hit{machine.roto==6 or machine.roto==9}:
        score: 2 * current_player.dpegs
    droptarget_a_hit{machine.roto==1}:
        score: 2 * current_player.dpegs
    droptarget_2_hit{machine.roto==2}:
        score: 2 * current_player.dpegs
    droptarget_3_hit{machine.roto==3}:
        score: 2 * current_player.dpegs
    right_2_hit{machine.roto==2}:
        score: 2 * current_player.dpegs
    top_king_hit{machine.roto==13 or machine.roto==5}:
        score: 2 * current_player.dpegs
    top_queen_hit{machine.roto==12 or machine.roto==5}:
        score: 2 * current_player.dpegs
    top_jack_hit{machine.roto==11 or machine.roto==5}:
        score: 2 * current_player.dpegs


shots:

    dingwalls:
        switch: s_dingwalls
    left_outlane:
        switch: s_left_outlane
        show_tokens:
            led: l_leftout
        profile: p_onoff
    left_outlane2:
        switch: s_left_outlane
        show_tokens:
            led: l_handd5
        profile: p_offon
    left_inlane:
        switch: s_left_inlane
        show_tokens:
            led: l_leftin
        profile: p_onoff
    left_inlane2:
        switch: s_left_inlane
        show_tokens:
            lights: l_handc7
        profile: p_offon
    droptarget_6:
        switch: s_drop_6
        show_tokens:
            led: l_handb6
        profile: p_offon
    droptarget_5:
        switch: s_drop_5
        show_tokens:
            led: l_handb5
        profile: p_offon
    droptarget_5b:
        switch: s_drop_5b
        show_tokens:
            led: l_handb5b
        profile: p_offon
    droptarget_4:    
        switch: s_drop_4
        show_tokens:
            led: l_handb4
        profile: p_offon
    droptarget_6b:
        switch: s_drop_6_right
        show_tokens:
            led: l_handc6
        profile: p_offon
    droptarget_9:
        switch: s_drop_9
        show_tokens:
            led: l_handc9
        profile: p_offon
    right_outlane:
        switch: s_right_outlane
        show_tokens:
            led: l_rightout
        profile: p_onoff
    right_outlane2:
        switch: s_right_outlane
        show_tokens:
            lights: l_handc8
        profile: p_offon
    droptarget_a:    
        switch: s_drop_ace
        show_tokens:
            led: l_handaa
        profile: p_offon
    droptarget_2:    
        switch: s_drop_2
        show_tokens:
            led: l_handa2
        profile: p_offon
    droptarget_3:    
        switch: s_drop_3
        show_tokens:
            led: l_handa3
        profile: p_offon
    right_2:
        switch: s_ro_2
        show_tokens:
            led: l_right2
        profile: p_onoff
    right_22:
        switch: s_ro_2
        show_tokens:
            led: l_handa2b
        profile: p_offon
    top_king:
        switch: s_ro_king
        show_tokens:
            led: l_topk
        profile: p_onoff
    top_king2:
        switch: s_ro_king
        show_tokens:
            lights: l_handdk
        profile: p_offon
    top_queen:
        switch: s_ro_queen
        show_tokens:
            led: l_topq
        profile: p_onoff
    top_queen2:
        switch: s_ro_queen
        show_tokens:
            lights: l_handdq
        profile: p_offon
    top_jack:
        switch: s_ro_jack
        show_tokens:
            led: l_topj
        profile: p_onoff
    top_jack2:
        switch: s_ro_jack
        show_tokens:
            lights: l_handdj
        profile: p_offon
    star1:
        switch: s_star1
    star2:
        switch: s_star2
    star3:
        switch: s_star3
    star4:
        switch: s_star4
    star5:
        switch: s_star5
    extraball:
        switch: s_extra_ball
    rototarget:
        switch: s_roto
    slings:
        switch: s_sling

#
#
shot_groups:
    handa: 
        shots: droptarget_a, droptarget_2, droptarget_3, right_22
        reset_events:
            ball_started: 0
            handa_complete: 3s
    handa2:
        shots: right_2
        reset_events:
            ball_started: 0
            handa_complete: 3s
    handb:
        shots: droptarget_4, droptarget_5, droptarget_5b, droptarget_6
        reset_events:
            ball_started: 0
            handb_complete: 3.25s
    handc:
        shots: left_inlane2, droptarget_6b, droptarget_9, right_outlane2
        reset_events:
            ball_started: 0
            handc_complete: 3.5s
    handc2:
        shots: left_inlane, right_outlane
        reset_events:
            ball_started: 0
            handc_complete: 3.5s
    handd:
        shots: left_outlane, top_jack, top_queen, top_king
        reset_events:
            ball_started: 0
            handd_complete: 3.75s
    handd2:
        shots: left_outlane2, top_jack2, top_queen2, top_king2
        reset_events:
            ball_started: 0
            handd_complete: 3.75s
#
shot_profiles:
    p_onoff:
        states:
            - name: lit # step 1
              show: on
            - name: unlit  # step 2
              show: off
        loop: no
    p_offon:
        states:
            - name: unlit # step 1
              show: off
            - name: lit  # step 2
              show: on
        loop: no
#
achievements:

    litstar1:
        start_events: mode_base_started, ball_started
        complete_events: top_king_lit_hit
        reset_events: ball_drain
        show_tokens:
            lights: l_star1
        show_when_started: off
        show_when_completed: on
    litstar2:
        start_events: mode_base_started, ball_started
        complete_events: top_queen_lit_hit
        reset_events: ball_drain
        show_tokens:
            lights: l_star2
        show_when_started: off
        show_when_completed: on
    litstar3:
        start_events: mode_base_started, ball_started
        complete_events: top_jack_lit_hit
        reset_events: ball_drain
        show_tokens:
            lights: l_star3
        show_when_started: off
        show_when_completed: on
    litstar4:
        start_events: mode_base_started, ball_started
        complete_events: right_outlane_lit_hit
        reset_events: ball_drain
        show_tokens:
            lights: l_star4
        show_when_started: off
        show_when_completed: on
    litstar5:
        start_events: mode_base_started, ball_started
        complete_events: left_inlane_lit_hit
        reset_events: ball_drain
        show_tokens:
            lights: l_star5
        show_when_started: off
        show_when_completed: on

    dp_handa:
        start_events: mode_base_started, ball_started
        complete_events: handa_complete
        reset_events: ball_drain
        show_tokens:
            lights: l_dpa
        show_when_started: off
        show_when_completed: on
    dp_handb:
        start_events: mode_base_started, ball_started
        complete_events: handb_complete
        reset_events: ball_drain
        show_tokens:
            lights: l_dpb
        show_when_started: off
        show_when_completed: on
    dp_handc:
        start_events: mode_base_started, ball_started
        complete_events: handc_complete
        reset_events: ball_drain
        show_tokens:
            lights: l_dpc
        show_when_started: off
        show_when_completed: on
    dp_handd:
        start_events: mode_base_started, ball_started
        complete_events: handd_complete
        reset_events: ball_drain
        show_tokens:
            lights: l_dpd
        show_when_started: off
        show_when_completed: on

achievement_groups:
    dp_hands:
        achievements: dp_handa, dp_handb, dp_handc, dp_handd
        events_when_all_completed: dp_pegs

slide_player:
  mode_base_started: nobs_running_slide
  player_gameswon: nobs_running_slide

show_player:

    ball_save_bs_disabled:
        shoot_again:
            action: stop
        shootagain_flash: 
            loops: -1

    sw_playfield_active:
        shootagain_flash: 
            action: stop
    
    left_outlane_hit:
        open_left: 
            loops: 0

    extra_ball_lit:
        open_right: 
            loops: 0

    extra_ball_hit:
        shoot_again: play

    handa_complete: 
        show_flash:
            loops: 5
            show_tokens:
                led: l_handa2, l_handa2b, l_handa3, l_handaa, l_right2
                color1: yellow
    handb_complete: 
        show_flash:
            loops: 5
            show_tokens:
                led: l_handb4, l_handb5, l_handb5b, l_handb6
                color1: green
    handc_complete: 
        show_flash:
            loops: 5
            show_tokens:
                led: l_handc6, l_handc7, l_handc8, l_handc9, l_leftin, l_rightout
                color1: red
    handd_complete: 
        show_flash:
            loops: 5
            show_tokens:
                led: l_handd5, l_handdj, l_handdq, l_handdk, l_topj, l_topq, l_topk, l_leftout
                color1: blue

shows:
    open_left:
    - time: 1
      events:
        servo_lout_open
      

    open_right:
    - time: 1
      events:
        servo_rout_open

    show_flash:
    - duration: .25
      lights:
        (led): (color1)
    - duration: .25
      lights:
        (led): off
    
    score_flash:
    - duration: .25
      lights:
        (led): on
    - duration: .25
      lights:
        (led): off
 
    shoot_again:
    - time: 0
      lights:
        l_shootagain: white
      duration: -1

    shootagain_flash:
    - duration: .25
      lights:
        l_shootagain: white
    - duration: .25
      lights:
        l_shootagain: off

